{"ast":null,"code":"import _asyncToGenerator from \"/Users/dillion/Desktop/github/ionic-chat-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\n/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nconst hostContext = (selector, el) => {\n  return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\n\n\nconst createColorClasses = (color, cssClassMap) => {\n  return typeof color === 'string' && color.length > 0 ? Object.assign({\n    'ion-color': true,\n    [`ion-color-${color}`]: true\n  }, cssClassMap) : cssClassMap;\n};\n\nconst getClassList = classes => {\n  if (classes !== undefined) {\n    const array = Array.isArray(classes) ? classes : classes.split(' ');\n    return array.filter(c => c != null).map(c => c.trim()).filter(c => c !== '');\n  }\n\n  return [];\n};\n\nconst getClassMap = classes => {\n  const map = {};\n  getClassList(classes).forEach(c => map[c] = true);\n  return map;\n};\n\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\n\nconst openURL = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* (url, ev, direction, animation) {\n    if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n      const router = document.querySelector('ion-router');\n\n      if (router) {\n        if (ev != null) {\n          ev.preventDefault();\n        }\n\n        return router.push(url, direction, animation);\n      }\n    }\n\n    return false;\n  });\n\n  return function openURL(_x, _x2, _x3, _x4) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };","map":{"version":3,"sources":["/Users/dillion/Desktop/github/ionic-chat-app/node_modules/@ionic/core/dist/esm/theme-a24ff1ad.js"],"names":["hostContext","selector","el","closest","createColorClasses","color","cssClassMap","length","Object","assign","getClassList","classes","undefined","array","Array","isArray","split","filter","c","map","trim","getClassMap","forEach","SCHEME","openURL","url","ev","direction","animation","test","router","document","querySelector","preventDefault","push","g","h","o"],"mappings":";;AAAA;AACA;AACA;AACA,MAAMA,WAAW,GAAG,CAACC,QAAD,EAAWC,EAAX,KAAkB;AACpC,SAAOA,EAAE,CAACC,OAAH,CAAWF,QAAX,MAAyB,IAAhC;AACD,CAFD;AAGA;AACA;AACA;;;AACA,MAAMG,kBAAkB,GAAG,CAACC,KAAD,EAAQC,WAAR,KAAwB;AACjD,SAAQ,OAAOD,KAAP,KAAiB,QAAjB,IAA6BA,KAAK,CAACE,MAAN,GAAe,CAA7C,GAAkDC,MAAM,CAACC,MAAP,CAAc;AAAE,iBAAa,IAAf;AAAqB,KAAE,aAAYJ,KAAM,EAApB,GAAwB;AAA7C,GAAd,EAAmEC,WAAnE,CAAlD,GAAoIA,WAA3I;AACD,CAFD;;AAGA,MAAMI,YAAY,GAAIC,OAAD,IAAa;AAChC,MAAIA,OAAO,KAAKC,SAAhB,EAA2B;AACzB,UAAMC,KAAK,GAAGC,KAAK,CAACC,OAAN,CAAcJ,OAAd,IAAyBA,OAAzB,GAAmCA,OAAO,CAACK,KAAR,CAAc,GAAd,CAAjD;AACA,WAAOH,KAAK,CACTI,MADI,CACGC,CAAC,IAAIA,CAAC,IAAI,IADb,EAEJC,GAFI,CAEAD,CAAC,IAAIA,CAAC,CAACE,IAAF,EAFL,EAGJH,MAHI,CAGGC,CAAC,IAAIA,CAAC,KAAK,EAHd,CAAP;AAID;;AACD,SAAO,EAAP;AACD,CATD;;AAUA,MAAMG,WAAW,GAAIV,OAAD,IAAa;AAC/B,QAAMQ,GAAG,GAAG,EAAZ;AACAT,EAAAA,YAAY,CAACC,OAAD,CAAZ,CAAsBW,OAAtB,CAA8BJ,CAAC,IAAIC,GAAG,CAACD,CAAD,CAAH,GAAS,IAA5C;AACA,SAAOC,GAAP;AACD,CAJD;;AAKA,MAAMI,MAAM,GAAG,sBAAf;;AACA,MAAMC,OAAO;AAAA,+BAAG,WAAOC,GAAP,EAAYC,EAAZ,EAAgBC,SAAhB,EAA2BC,SAA3B,EAAyC;AACvD,QAAIH,GAAG,IAAI,IAAP,IAAeA,GAAG,CAAC,CAAD,CAAH,KAAW,GAA1B,IAAiC,CAACF,MAAM,CAACM,IAAP,CAAYJ,GAAZ,CAAtC,EAAwD;AACtD,YAAMK,MAAM,GAAGC,QAAQ,CAACC,aAAT,CAAuB,YAAvB,CAAf;;AACA,UAAIF,MAAJ,EAAY;AACV,YAAIJ,EAAE,IAAI,IAAV,EAAgB;AACdA,UAAAA,EAAE,CAACO,cAAH;AACD;;AACD,eAAOH,MAAM,CAACI,IAAP,CAAYT,GAAZ,EAAiBE,SAAjB,EAA4BC,SAA5B,CAAP;AACD;AACF;;AACD,WAAO,KAAP;AACD,GAXY;;AAAA,kBAAPJ,OAAO;AAAA;AAAA;AAAA,GAAb;;AAaA,SAASpB,kBAAkB,IAAIc,CAA/B,EAAkCG,WAAW,IAAIc,CAAjD,EAAoDnC,WAAW,IAAIoC,CAAnE,EAAsEZ,OAAO,IAAIa,CAAjF","sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nconst hostContext = (selector, el) => {\n  return el.closest(selector) !== null;\n};\n/**\n * Create the mode and color classes for the component based on the classes passed in\n */\nconst createColorClasses = (color, cssClassMap) => {\n  return (typeof color === 'string' && color.length > 0) ? Object.assign({ 'ion-color': true, [`ion-color-${color}`]: true }, cssClassMap) : cssClassMap;\n};\nconst getClassList = (classes) => {\n  if (classes !== undefined) {\n    const array = Array.isArray(classes) ? classes : classes.split(' ');\n    return array\n      .filter(c => c != null)\n      .map(c => c.trim())\n      .filter(c => c !== '');\n  }\n  return [];\n};\nconst getClassMap = (classes) => {\n  const map = {};\n  getClassList(classes).forEach(c => map[c] = true);\n  return map;\n};\nconst SCHEME = /^[a-z][a-z0-9+\\-.]*:/;\nconst openURL = async (url, ev, direction, animation) => {\n  if (url != null && url[0] !== '#' && !SCHEME.test(url)) {\n    const router = document.querySelector('ion-router');\n    if (router) {\n      if (ev != null) {\n        ev.preventDefault();\n      }\n      return router.push(url, direction, animation);\n    }\n  }\n  return false;\n};\n\nexport { createColorClasses as c, getClassMap as g, hostContext as h, openURL as o };\n"]},"metadata":{},"sourceType":"module"}