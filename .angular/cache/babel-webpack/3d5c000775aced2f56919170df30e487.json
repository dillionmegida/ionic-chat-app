{"ast":null,"code":"import _asyncToGenerator from \"/Users/dillion/Desktop/github/ionic-chat-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\n/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { c as componentOnReady } from './helpers-eed79a2b.js';\n\nconst attachComponent = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator(function* (delegate, container, component, cssClasses, componentProps, inline) {\n    if (delegate) {\n      return delegate.attachViewToDom(container, component, componentProps, cssClasses);\n    }\n\n    if (!inline && typeof component !== 'string' && !(component instanceof HTMLElement)) {\n      throw new Error('framework delegate is missing');\n    }\n\n    const el = typeof component === 'string' ? container.ownerDocument && container.ownerDocument.createElement(component) : component;\n\n    if (cssClasses) {\n      cssClasses.forEach(c => el.classList.add(c));\n    }\n\n    if (componentProps) {\n      Object.assign(el, componentProps);\n    }\n\n    container.appendChild(el);\n    yield new Promise(resolve => componentOnReady(el, resolve));\n    return el;\n  });\n\n  return function attachComponent(_x, _x2, _x3, _x4, _x5, _x6) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nconst detachComponent = (delegate, element) => {\n  if (element) {\n    if (delegate) {\n      const container = element.parentElement;\n      return delegate.removeViewFromDom(container, element);\n    }\n\n    element.remove();\n  }\n\n  return Promise.resolve();\n};\n\nconst CoreDelegate = () => {\n  let BaseComponent;\n  let Reference;\n\n  const attachViewToDom = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator(function* (parentElement, userComponent, userComponentProps = {}, cssClasses = []) {\n      BaseComponent = parentElement;\n      /**\n       * If passing in a component via the `component` props\n       * we need to append it inside of our overlay component.\n       */\n\n      if (userComponent) {\n        /**\n         * If passing in the tag name, create\n         * the element otherwise just get a reference\n         * to the component.\n         */\n        const el = typeof userComponent === 'string' ? BaseComponent.ownerDocument && BaseComponent.ownerDocument.createElement(userComponent) : userComponent;\n        /**\n         * Add any css classes passed in\n         * via the cssClasses prop on the overlay.\n         */\n\n        cssClasses.forEach(c => el.classList.add(c));\n        /**\n         * Add any props passed in\n         * via the componentProps prop on the overlay.\n         */\n\n        Object.assign(el, userComponentProps);\n        /**\n         * Finally, append the component\n         * inside of the overlay component.\n         */\n\n        BaseComponent.appendChild(el);\n        yield new Promise(resolve => componentOnReady(el, resolve));\n      }\n      /**\n       * Get the root of the app and\n       * add the overlay there.\n       */\n\n\n      const app = document.querySelector('ion-app') || document.body;\n      /**\n       * Create a placeholder comment so that\n       * we can return this component to where\n       * it was previously.\n       */\n\n      Reference = document.createComment('ionic teleport');\n      BaseComponent.parentNode.insertBefore(Reference, BaseComponent);\n      app.appendChild(BaseComponent);\n      return BaseComponent;\n    });\n\n    return function attachViewToDom(_x7, _x8) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  const removeViewFromDom = () => {\n    /**\n     * Return component to where it was previously in the DOM.\n     */\n    if (BaseComponent && Reference) {\n      Reference.parentNode.insertBefore(BaseComponent, Reference);\n      Reference.remove();\n    }\n\n    return Promise.resolve();\n  };\n\n  return {\n    attachViewToDom,\n    removeViewFromDom\n  };\n};\n\nexport { CoreDelegate as C, attachComponent as a, detachComponent as d };","map":{"version":3,"sources":["/Users/dillion/Desktop/github/ionic-chat-app/node_modules/@ionic/core/dist/esm/framework-delegate-a922018c.js"],"names":["c","componentOnReady","attachComponent","delegate","container","component","cssClasses","componentProps","inline","attachViewToDom","HTMLElement","Error","el","ownerDocument","createElement","forEach","classList","add","Object","assign","appendChild","Promise","resolve","detachComponent","element","parentElement","removeViewFromDom","remove","CoreDelegate","BaseComponent","Reference","userComponent","userComponentProps","app","document","querySelector","body","createComment","parentNode","insertBefore","C","a","d"],"mappings":"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","sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { c as componentOnReady } from './helpers-eed79a2b.js';\n\nconst attachComponent = async (delegate, container, component, cssClasses, componentProps, inline) => {\n  if (delegate) {\n    return delegate.attachViewToDom(container, component, componentProps, cssClasses);\n  }\n  if (!inline && typeof component !== 'string' && !(component instanceof HTMLElement)) {\n    throw new Error('framework delegate is missing');\n  }\n  const el = (typeof component === 'string')\n    ? container.ownerDocument && container.ownerDocument.createElement(component)\n    : component;\n  if (cssClasses) {\n    cssClasses.forEach(c => el.classList.add(c));\n  }\n  if (componentProps) {\n    Object.assign(el, componentProps);\n  }\n  container.appendChild(el);\n  await new Promise(resolve => componentOnReady(el, resolve));\n  return el;\n};\nconst detachComponent = (delegate, element) => {\n  if (element) {\n    if (delegate) {\n      const container = element.parentElement;\n      return delegate.removeViewFromDom(container, element);\n    }\n    element.remove();\n  }\n  return Promise.resolve();\n};\nconst CoreDelegate = () => {\n  let BaseComponent;\n  let Reference;\n  const attachViewToDom = async (parentElement, userComponent, userComponentProps = {}, cssClasses = []) => {\n    BaseComponent = parentElement;\n    /**\n     * If passing in a component via the `component` props\n     * we need to append it inside of our overlay component.\n     */\n    if (userComponent) {\n      /**\n       * If passing in the tag name, create\n       * the element otherwise just get a reference\n       * to the component.\n       */\n      const el = (typeof userComponent === 'string')\n        ? BaseComponent.ownerDocument && BaseComponent.ownerDocument.createElement(userComponent)\n        : userComponent;\n      /**\n       * Add any css classes passed in\n       * via the cssClasses prop on the overlay.\n       */\n      cssClasses.forEach(c => el.classList.add(c));\n      /**\n       * Add any props passed in\n       * via the componentProps prop on the overlay.\n       */\n      Object.assign(el, userComponentProps);\n      /**\n       * Finally, append the component\n       * inside of the overlay component.\n       */\n      BaseComponent.appendChild(el);\n      await new Promise(resolve => componentOnReady(el, resolve));\n    }\n    /**\n     * Get the root of the app and\n     * add the overlay there.\n     */\n    const app = document.querySelector('ion-app') || document.body;\n    /**\n     * Create a placeholder comment so that\n     * we can return this component to where\n     * it was previously.\n     */\n    Reference = document.createComment('ionic teleport');\n    BaseComponent.parentNode.insertBefore(Reference, BaseComponent);\n    app.appendChild(BaseComponent);\n    return BaseComponent;\n  };\n  const removeViewFromDom = () => {\n    /**\n     * Return component to where it was previously in the DOM.\n     */\n    if (BaseComponent && Reference) {\n      Reference.parentNode.insertBefore(BaseComponent, Reference);\n      Reference.remove();\n    }\n    return Promise.resolve();\n  };\n  return { attachViewToDom, removeViewFromDom };\n};\n\nexport { CoreDelegate as C, attachComponent as a, detachComponent as d };\n"]},"metadata":{},"sourceType":"module"}